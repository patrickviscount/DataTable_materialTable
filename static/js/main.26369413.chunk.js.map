{"version":3,"sources":["Components/Modal.jsx","Components/Hooks/useWindowsDimensions.jsx","Components/DataTable.jsx","serviceWorker.js","index.js"],"names":["findURL","dataStream","WorkdayLink","data","split","url","i","length","startsWith","Modal","props","ID","idNumber","useState","setData","loading","setLoading","getDataList","fetch","then","resp","json","catch","error","closeOnEsc","e","charCode","keyCode","onClose","useEffect","document","body","addEventListener","removeEventListener","show","className","onClick","style","height","scrollHeight","stopPropagation","href","target","rel","getWindowDimensions","window","width","innerWidth","innerHeight","URL","oldSeg","checker","columnNumber","information","TechLeadLink","BusinessContactLink","DataTable","filter","setFilter","CRUD","setCRUD","view","setView","segment","setSegment","tableClass","setTableClass","setShow","idNum","setIdNum","display","dropDownWidth","setDropDownWidth","marginTop","ariaLabel","ColumnsButtonStyle","setColumnsButtonStyle","title","setTitle","hardCoded","setHardCoded","actionsColumnIndex","actionsCellStyle","justifyContent","addRowPosition","filtering","search","draggable","paginationType","pageSize","options","setOptions","windowDimensions","setWindowDimensions","handleResize","useWindowDimensions","ref","useRef","oldClick","handleCRUD","alert","setTimeout","test","querySelectorAll","innerText","tableWidth","current","offsetWidth","dt","getColumns","realCols","j","columns","indexOf","cellStyle","backgroundColor","hidden","push","field","editable","render","rowData","handleRender","str","temp","slice","clickInformation","CRUDrows","path","saviorRow","allRows","top","getBoundingClientRect","clientY","between","outerText","nodeName","tagName","Number","prototype","a","b","min","Math","apply","max","this","handleColumns","handleCheck","Array","from","components","Pagination","TablePagination","rowsPerPageOptions","value","label","Toolbar","classes","root","onRowAdd","newRow","Promise","resolve","reject","newID","sort","id","findID","method","headers","JSON","stringify","onRowDelete","selectedRow","onRowUpdate","updatedRow","oldRow","actions","icon","isFreeAction","Checkbox","checked","onChange","inputProps","color","tooltip","Select","labelId","MenuItem","event","Id","Boolean","location","hostname","match","ReactDOM","StrictMode","textAlign","fontSize","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.26369413.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = (props) => {\r\n    const URL = \"http://localhost:4000/DataStreams\";\r\n    let ID = props.idNumber;\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    //gets information to populate modal\r\n    function getDataList() {\r\n      fetch(`${URL}/${ID}`).then(resp=>resp.json())\r\n      .then(resp=>setData(resp)).catch(error => {\r\n        setData(\r\n          {\r\n            \"id\": 1,\r\n            \"Vendor name\": \"Petah INC\",\r\n            \"Vendor contact\": \"petAH@xasdx.com\",\r\n            \"Buisness Unit Acquiring\": \"Insurance\",\r\n            \"Lead Data Steward\": \"Tom Brady\",\r\n            \"Business Contact\": \"CONTACST\",\r\n            \"Main Users of Data\": \"Insurance\",\r\n            \"Brief Desc of Data Used\": \"global variable checking\",\r\n            \"Value Dervied From Data\": \"Risk Assesment\",\r\n            \"Contracts in Zycus\": \"H1Z1Z0MB13Saz\",\r\n            \"IT Source\": \"MASHws\",\r\n            \"TechLeadLink\": \"mailto:google@google.com\",\r\n            \"BusinessContactLink\": \"nothjign imporetant here\"\r\n          })\r\n      });\r\n        setLoading(false);\r\n    }\r\n    //escape key closes modal\r\n    const closeOnEsc = (e) => {\r\n        if((e.charCode || e.keyCode) === 27){\r\n            props.onClose();\r\n        }\r\n    }\r\n\r\n    //loading until data is finished populating\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        getDataList();\r\n        document.body.addEventListener('keydown', closeOnEsc);\r\n        return function cleanup() {\r\n            document.body.removeEventListener('keydown', closeOnEsc);\r\n        }\r\n    }, [])\r\n\r\n    //updates data when props change\r\n    useEffect(() => {\r\n        getDataList();\r\n    }, [props])\r\n\r\n    if(!props.show){\r\n        return null;\r\n    }\r\n    if(loading === true){\r\n      return (<div className='modal'> <div className='modal-content'><h1>Content isn't finished loading</h1> </div> </div>)\r\n    }\r\n\r\n    return (\r\n        <div className='modal' onClick={props.onClose} style={{height: document.body.scrollHeight+25}}>\r\n            <div className='modal-content' onClick={e => e.stopPropagation()}>\r\n                <div className='modal-header'>\r\n                    <h4 className='modal-title'>{data[\"Vendor name\"]}</h4>\r\n                </div>\r\n                <div className='modal-body'>\r\n                <h6> Vendor contact: </h6> {data[\"Vendor contact\"]} <br /> <hr />\r\n                <h6> Buisness Unit Acquiring:</h6> {data[\"Buisness Unit Acquiring\"]} <br /> <hr />\r\n                <h6> Lead Data Steward:</h6> {data[\"Lead Data Steward\"]} <br /> <hr />\r\n                <h6> Business Contact:</h6> {data[\"Business Contact\"]} <br /> <hr />\r\n                <h6> Main Users of Data:</h6> {data[\"Main Users of Data\"]} <br /> <hr />\r\n                <h6> Brief Desc of Data Used:</h6> {data[\"Brief Desc of Data Used\"]} <br /> <hr />\r\n                <h6> Value Dervied From Data:</h6> {data[\"Value Dervied From Data\"]} <br /> <hr />\r\n                <h6> Contracts in Zycus:</h6> {data[\"Contracts in Zycus\"]} <br /> <hr />\r\n                <h6> IT Source:</h6> {data[\"IT Source\"]} <br /> <hr />\r\n                 <div>\r\n                <h6>Contact at Axis:</h6>\r\n                <a\r\n                    href={`${findURL(data)}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\" \r\n                    >\r\n                    {findURL(data)}\r\n                </a>\r\n                </div> <br /> <hr />\r\n                </div>\r\n                <div className='modal-footer'>\r\n                    <button onClick={props.onClose} className='exitButton'>X</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n//this function finds workday / mail urls or redirects to axis home page\r\nfunction findURL(dataStream) {\r\n    if (dataStream.WorkdayLink) {\r\n    let data = dataStream.WorkdayLink.split(\" \");\r\n    let url = \"\";\r\n    \r\n    for (let i = 0; i < data.length; i++) {\r\n      if( data[i].startsWith(\"https://www.myworkday.com\")){\r\n        url = data[i];\r\n        return url;\r\n      }\r\n      else if (data[i].startsWith(\"mailto\")) {\r\n        url = data[i];\r\n      }\r\n    }\r\n    if (url === \"\") {\r\n      url = \"https://www.axiscapital.com/\";\r\n    }\r\n    return url;\r\n    }\r\n    else {\r\n      return \"https://www.axiscapital.com/\";\r\n    }\r\n  }\r\n\r\nexport default Modal;","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./DataTable.css\";\r\nimport MaterialTable, {MTableToolbar} from \"material-table\";\r\nimport { Checkbox, Select, MenuItem, TablePagination } from \"@material-ui/core\";\r\nimport Modal from \"./Modal\";\r\nimport useWindowDimensions from \"./Hooks/useWindowsDimensions\";\r\nconst URL = \"http://localhost:4000/DataStreams\";\r\nlet oldSeg = \"all\";\r\nvar checker = 1;\r\n\r\nfunction DataTable() {\r\n\r\n  const [data, setData] = useState([]);\r\n  const [filter, setFilter] = useState(false);\r\n  const [CRUD, setCRUD] = useState(false);\r\n  const [view, setView] = useState(true);\r\n  const [segment, setSegment] = useState(\"all\");\r\n  const [tableClass, setTableClass] = useState(\"Simple\");\r\n  const [show, setShow] = useState(false);\r\n  const [idNum, setIdNum] = useState(1);\r\n  const [dropDownWidth, setDropDownWidth] = useState({width: 100, display: 'inline'});\r\n  const [ColumnsButtonStyle, setColumnsButtonStyle] = useState({marginTop: '5%', ariaLabel: 'primary checkbox'});\r\n  const [title, setTitle] = useState('3rd Party Data Vendors');\r\n  const [hardCoded, setHardCoded] = useState(false);\r\n  const [options, setOptions] = useState({\r\n    actionsColumnIndex: -1,\r\n    actionsCellStyle: {justifyContent: \"center\"},\r\n    addRowPosition: \"first\",\r\n    filtering: filter,\r\n    search: true,\r\n    draggable: true,\r\n    paginationType: \"stepped\",\r\n    pageSize: 5\r\n  });\r\n  const {width, height} = useWindowDimensions();\r\n  const ref = useRef(null);\r\n  let oldClick = 9999;\r\n\r\n  //Gets the data to load he table, and adds an event listen for all clicks\r\n  useEffect(()=>{\r\n    getDataList();\r\n    document.body.addEventListener('click', handleCRUD);\r\n  },[]);\r\n\r\n  useEffect(()=>{\r\n    if (hardCoded === true){\r\n      alert(\"This table has been loaded with static data for demonstrational purposes and many features such as the modal pop up and the CRUD functionality may not work as expected.\")\r\n    }\r\n  },[hardCoded]);\r\n\r\n\r\n  //Handles font size by assigning css depending on columns view\r\n    useEffect(()=>{\r\n    if(CRUD === true){\r\n      setTableClass(\"All\")\r\n    }\r\n    else if(view === true){\r\n      setTableClass(\"Simple\");\r\n    }\r\n    else if (view === false){\r\n      setTableClass(\"Expanded\");\r\n    } \r\n  },[view, CRUD]);\r\n\r\n  //Adds an extra event listener for all edit buttons to load all columns\r\n  useEffect(()=>{\r\n    setTimeout(function(){\r\n      let test = document.querySelectorAll('button');\r\n      for (let i = 0; i < test.length; i++){\r\n        if (test[i].innerText === 'edit') {\r\n          test[i].addEventListener('click', () => handleCRUD(i));\r\n        }\r\n      }\r\n    }, 500)\r\n  },[CRUD]);\r\n\r\n  //Rendering and hiding table header functionality to avoid breaking on smaller screen sizes\r\n  useEffect(()=>{\r\n    let tableWidth = ref.current.offsetWidth;\r\n    if (tableWidth < 975){\r\n      setTitle('');\r\n    }\r\n    if (tableWidth > 975){\r\n      setTitle('3rd Party Data Vendors');  \r\n    }\r\n    if (tableWidth < 764){\r\n      options.search = false;\r\n    }\r\n    if (tableWidth > 764){\r\n      options.search = true;\r\n    }\r\n    if (tableWidth < 455){\r\n      setDropDownWidth({width: 0, display: 'none'});\r\n    }\r\n    if (tableWidth > 455){\r\n      setDropDownWidth({width: 100, display: 'inline'});\r\n    }\r\n    if (tableWidth > 325){\r\n      setColumnsButtonStyle({width: 100, display: 'inline', marginTop: '5%', ariaLabel: 'primary checkbox'});\r\n    }\r\n    if (tableWidth < 325){\r\n      setColumnsButtonStyle({width: 100, display: 'none', marginTop: '5%', ariaLabel: 'primary checkbox'});\r\n    }\r\n  },[width, height]);\r\n\r\n  //Handles row rendering when filtering through the drop down menu\r\n  useEffect(() => {\r\n    if((segment !== \"all\" && oldSeg !== \"all\") || (segment === \"all\" && oldSeg !== \"all\")) {\r\n      getDataList();\r\n      setSegment(\"all\");\r\n    }\r\n    setData(segment === 'all'? data : data.filter(dt => dt[\"Main Users of Data\"] === segment));\r\n    oldSeg = segment;\r\n  }, [segment]);\r\n  \r\n  //API call for data\r\n  const getDataList=()=> {\r\n    fetch(URL).then(resp=>resp.json())\r\n    .then(resp=>setData(resp)).catch(error => {\r\n      setData([\r\n          {\r\n            \"id\": 1,\r\n            \"Vendor name\": \"Petah INC\",\r\n            \"Vendor contact\": \"petAH@xasdx.com\",\r\n            \"Buisness Unit Acquiring\": \"Insurance\",\r\n            \"Lead Data Steward\": \"Tom Brady\",\r\n            \"Business Contact\": \"CONTACST\",\r\n            \"Main Users of Data\": \"Insurance\",\r\n            \"Brief Desc of Data Used\": \"global variable checking\",\r\n            \"Value Dervied From Data\": \"Risk Assesment\",\r\n            \"Contracts in Zycus\": \"H1Z1Z0MB13Saz\",\r\n            \"IT Source\": \"MASHws\",\r\n            \"TechLeadLink\": \"mailto:google@google.com\",\r\n            \"BusinessContactLink\": \"nothjign imporetant here\"\r\n          },\r\n          {\r\n            \"id\": 2,\r\n            \"Vendor name\": \"PEOPLE INC\",\r\n            \"Vendor contact\": \"peterZon@poeple.com\",\r\n            \"Buisness Unit Acquiring\": \"Cyber and Tech\",\r\n            \"Lead Data Steward\": \"Cyotes\",\r\n            \"Business Contact\": \"John Jhon\",\r\n            \"Main Users of Data\": \"Re-insurance\",\r\n            \"Brief Desc of Data Used\": \"Criminal Check\",\r\n            \"Value Dervied From Data\": \"Risk Assesment\",\r\n            \"Contracts in Zycus\": \"ZOOM13Z\",\r\n            \"IT Source\": \"HERE\",\r\n            \"TechLeadLink\": \"https://www.myworkday.com/axiscapital/d/inst/1$17/247$5193.htmld#TABINDEX=0&SUBTABINDEX=0\",\r\n            \"BusinessContactLink\": \"mailto:google@google.com\"\r\n          },\r\n          {\r\n            \"id\": 3,\r\n            \"Vendor name\": \"3 INC\",\r\n            \"Vendor contact\": \"3@testeremailnotreal.com\",\r\n            \"Buisness Unit Acquiring\": \"Insurance\",\r\n            \"Lead Data Steward\": \"Patriots\",\r\n            \"Business Contact\": \"Scott Thomas\",\r\n            \"Main Users of Data\": \"Admin\",\r\n            \"Brief Desc of Data Used\": \"Counting services\",\r\n            \"Value Dervied From Data\": \"IT\",\r\n            \"Contracts in Zycus\": \"09JHKH09\",\r\n            \"IT Source\": \"Hola!\",\r\n            \"TechLeadLink\": \"https://www.myworkday.com/axiscapital/d/inst/1$17/247$5193.htmld#TABINDEX=0&SUBTABINDEX=0\",\r\n            \"BusinessContactLink\": \"nothjign imporetant here\"\r\n          }])\r\n          setHardCoded(true);\r\n    })\r\n  };\r\n\r\n  //The function drives column rendering, simple, expanded or all views\r\n  //Don't set columns.hidden to false, or table will break\r\n  const getColumns = () => {\r\n    var realCols = [];\r\n\r\n    if(CRUD === true){\r\n      for (let j = 0; j < columns.length; j++){\r\n\r\n        if(columns.indexOf(columns[j]) % 2 == 1){\r\n          columns[j].cellStyle = {backgroundColor: '#FFF'};\r\n        }\r\n        else{\r\n          columns[j].cellStyle = {backgroundColor: '#F1F1F0'};\r\n        }\r\n      }\r\n      return columns;\r\n    }\r\n\r\n    columns[0].hidden = true;\r\n    columns[9].hidden = true;\r\n    columns[10].hidden = true;\r\n    if (checker === 0) {\r\n      for(let i = 0; i < columns.length; i++){\r\n        if (columns[i].hidden !== true){\r\n          realCols.push(columns[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (checker === 1) {\r\n      columns[0].hidden = true;\r\n      columns[2].hidden = true;\r\n      columns[3].hidden = true;\r\n      columns[8].hidden = true;\r\n      columns[9].hidden = true;\r\n      for(let i = 0; i < columns.length; i++){\r\n        if (columns[i].hidden !== true){\r\n          realCols.push(columns[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < realCols.length; j++){\r\n\r\n      if(realCols.indexOf(realCols[j]) % 2 == 1){\r\n        realCols[j].cellStyle = {backgroundColor: '#FFF'};\r\n      }\r\n      else{\r\n        realCols[j].cellStyle = {backgroundColor: '#F1F1F0'};\r\n      }\r\n    }\r\n    return realCols;\r\n  }\r\n\r\n  const columns = [\r\n    { title: \"ID\", field: \"id\", editable: false},\r\n    { title: \"Vendor name\", field: \"Vendor name\", render: (rowData) => <p>{handleRender(rowData['Vendor name'])}</p>},\r\n    { title: \"Vendor contact\", field: \"Vendor contact\", render: (rowData) => <p>{handleRender(rowData['Vendor contact'])}</p>, cellStyle: {\r\n      backgroundColor: '#FFF'\r\n  }},\r\n    { title: \"Buisness Unit Acquiring\", field: \"Buisness Unit Acquiring\", render: (rowData) => <p>{handleRender(rowData['Buisness Unit Acquiring'])}</p>}, \r\n    {\r\n      title: \"Lead Data Steward\",\r\n      field: \"Lead Data Steward\",\r\n      render: (rowData) => <a href={`${findURL(rowData, 1)}`} target=\"_blank\" rel=\"noopener noreferrer\"> {handleRender(rowData[\"Lead Data Steward\"])} </a>, cellStyle: {\r\n        backgroundColor: '#FFF'\r\n    }\r\n    },\r\n    {\r\n      title: \"Business Contact\",\r\n      field: \"Business Contact\",\r\n      render: (rowData) => <a href={`${findURL(rowData, 2)}`} target=\"_blank\" rel=\"noopener noreferrer\"> {handleRender(rowData[\"Business Contact\"])} </a>\r\n    },\r\n    { title: \"Main Users of Data\", field: \"Main Users of Data\", render: (rowData) => <p>{handleRender(rowData['Main Users of Data'])}</p>, cellStyle: {\r\n      backgroundColor: '#FFF'\r\n  }},\r\n    { title: \"Brief Desc of Data Used\", field: \"Brief Desc of Data Used\", render: (rowData) => <p>{handleRender(rowData['Brief Desc of Data Used'])}</p>},\r\n    { title: \"Value Dervied From Data\", field: \"Value Dervied From Data\", render: (rowData) => <p>{handleRender(rowData['Value Dervied From Data'])}</p>, cellStyle: {\r\n      backgroundColor: '#FFF'\r\n  }},\r\n    { title: \"Contracts in Zycus\", field: \"Contracts in Zycus\", render: (rowData) => <p>{handleRender(rowData['Contracts in Zycus'])}</p>},\r\n    { title: \"IT Source\", field: \"IT Source\", render: (rowData) => <p>{handleRender(rowData['IT Source'])}</p>}\r\n  ];\r\n\r\n  //Renders the modal with the passed row id number\r\n  function handleClickModal(Id) {\r\n    setIdNum(Id);\r\n    setShow(!show);\r\n  }\r\n\r\n  //This function verifies that the cell contents are 100 characters or less, otherwise it cuts it to 100\r\n  //This is to avoid a large wall of text taking up too much space\r\n  function handleRender(str) {\r\n    if(str){\r\n    if(str.length > 100){\r\n      let temp = str.slice(0, 99);\r\n      temp = temp + '...';\r\n      return temp;\r\n    }\r\n  }\r\n    return str;\r\n  }\r\n\r\n  //Handles going into and getting out of CRUD functionality, by checking where a person is clicking\r\n  function handleCRUD(clickInformation) {\r\n    if(clickInformation > 0 || clickInformation < 200) {\r\n      setCRUD(true);\r\n  }\r\n    else{\r\n      setTimeout(function(){\r\n        let CRUDrows = document.querySelectorAll('.Mui-selected'); //This css style only applies when a CRUD function is happening\r\n        if (clickInformation.path[2].innerText > 0){ //This happens when a pagination number is clicked, needed this to refresh the edit botten click events\r\n          setCRUD(true);\r\n          setCRUD(false);\r\n        } \r\n        let saviorRow = 0;\r\n        const allRows = document.querySelectorAll('tr');\r\n        for(let i =1; i < allRows.length-1; i++){\r\n          if(allRows[i].className === 'MuiTableRow-root') {\r\n          saviorRow = i;\r\n          }\r\n        }\r\n        let top = allRows[saviorRow].getBoundingClientRect().top;\r\n        if((clickInformation.clientY > top && clickInformation.clientY < top + 65) || (clickInformation.clientY.between(oldClick+30, oldClick-30))) {\r\n          oldClick = clickInformation.clientY;\r\n        }\r\n        else if ((CRUDrows.length > 0 && ((clickInformation.path[2].innerText === 'add_box') || clickInformation.path[0].innerText === 'add_box')) || clickInformation.path[2].outerText === 'edit' || clickInformation.path[0].outerText === 'edit'){\r\n          //If rows exist and a add row or edit row button is clicked  \r\n          setCRUD(true);\r\n        }\r\n        else{\r\n          if (CRUDrows.length > 0 ){\r\n            if(clickInformation.path[0].nodeName != 'INPUT' && clickInformation.path[0].tagName != \"TR\"){\r\n              //If the user clicks outside of a row input or a row itself\r\n              setCRUD(false);\r\n            }\r\n          }\r\n        else{\r\n          setCRUD(false);\r\n          }\r\n        }\r\n    }, 1);\r\n    }\r\n  }\r\n\r\n  Number.prototype.between = function(a, b) {\r\n    var min = Math.min.apply(Math, [a, b]),\r\n      max = Math.max.apply(Math, [a, b]);\r\n    return this > min && this < max;\r\n  };\r\n\r\n  //This function flips a boolean and calls the columns function\r\n  const handleColumns = () => {\r\n    setView(!view);\r\n    if(checker === 0){\r\n      checker = 1;\r\n    }\r\n    else {\r\n      checker = 0;\r\n    }\r\n    getColumns();\r\n  }\r\n\r\n  //This function handles the filtering checkbox by checking the box, and enabling the filtering functionality\r\n  const handleCheck = () => {\r\n    setFilter(!filter);\r\n    setOptions({...options, filtering: !filter});\r\n  }\r\n\r\n  return (\r\n    <div className={tableClass} ref={ref}>\r\n      <MaterialTable //Actual Table call, most passed in variables can be changed via setState\r\n        title={title}\r\n        className={tableClass}\r\n        data={Array.from(data)}\r\n        columns={getColumns()}\r\n        options={options}\r\n\r\n        components={{\r\n          //Sets the pagination dropdown\r\n          Pagination: props => (\r\n            <TablePagination\r\n              {...props}\r\n              rowsPerPageOptions={[5, 10, 20, 50, { value: data.length, label: 'All' }]}\r\n            />\r\n          ),\r\n          //This was to properly style the header\r\n          Toolbar: props => (\r\n            <div style={{ backgroundColor: '#e8eaf5' }}>\r\n              <MTableToolbar {...props} classes={{ root: \"fontHandler\" }} />\r\n            </div>\r\n          )\r\n        }}\r\n\r\n        //These are all for when any row is added, deleted or edited.\r\n        //generally, these functions just pass along that information to the API endpoint\r\n        editable={{\r\n          onRowAdd: (newRow) =>\r\n            new Promise((resolve, reject) => {\r\n              let newID = findID(data);\r\n              newRow.id = newID;\r\n              fetch(URL,{\r\n                method: \"POST\",\r\n                headers:{\r\n                  \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(newRow)\r\n              }).then(resp=>resp.json()).then(resp=>getDataList())\r\n              .then(resolve());\r\n            }),\r\n\r\n          onRowDelete: (selectedRow) =>\r\n            new Promise((resolve, reject) => {\r\n              fetch(`${URL}/${selectedRow.id}`,{\r\n                method: \"DELETE\",\r\n                headers:{\r\n                  \"Content-type\": \"application/json\"\r\n                },\r\n              }).then(resp=>resp.json()).then(resp=>getDataList())\r\n              .then(resolve());\r\n            }),\r\n\r\n          onRowUpdate: (updatedRow, oldRow) =>\r\n            new Promise((resolve, reject) => {\r\n              checker = 1;\r\n              fetch(`${URL}/${oldRow.id}`,{\r\n                method: \"PUT\",\r\n                headers:{\r\n                  \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(updatedRow)\r\n              }).then(resp=>resp.json()).then(resp=>getDataList())\r\n              .then(resolve());\r\n            })\r\n        }\r\n      }\r\n\r\n      //Header buttons / functionality\r\n      actions = {[\r\n        { //Columns simple / expanded views button\r\n          icon:() => \r\n          <button className=\"columnsButton\" onClick={handleColumns} style={ColumnsButtonStyle}>\r\n          {view ? 'Show Columns' : 'Hide Columns'}\r\n          </ button>,\r\n          isFreeAction: true \r\n        },\r\n        { // Filtering checkbox \r\n        icon:() => \r\n        <Checkbox\r\n        checked = {filter}\r\n        onChange={handleCheck} \r\n        inputProps={{'aria-label': 'primary checkbox'}}\r\n        color=\"primary\"\r\n        />,\r\n        tooltip:\"Hide/Show Filter\",\r\n        isFreeAction: true\r\n        },\r\n        { // Drop down filtering\r\n          icon: () => \r\n          <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-select-simple\"\r\n          style={dropDownWidth}\r\n          value={segment}\r\n          onChange={(e) => {\r\n            setSegment(e.target.value);\r\n          }}\r\n          >\r\n          <MenuItem value={\"all\"}> All </MenuItem>\r\n          <MenuItem value={\"Insurance\"}> Insurance </MenuItem>\r\n          <MenuItem value={\"Re-insurance\"}> Re-insurance </MenuItem>\r\n          <MenuItem value={\"Admin\"}> Admin </MenuItem>\r\n          </Select>,\r\n          tooltip: \"Filter Users of Data\",\r\n          isFreeAction: true\r\n        },\r\n        { //Modal button\r\n          icon: 'info',\r\n          tooltip: 'More Info',\r\n          onClick: (rowData, event) => {handleClickModal(event.id)}\r\n      },\r\n      ]}\r\n      />\r\n\r\n      <Modal  //The modal, its hidden until the more info button is clicked\r\n        show={show}\r\n        idNumber={idNum}\r\n        onClose={() => setShow(false)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n//This function goes from 1 to row.length to fund the first id number not in use\r\nfunction findID(dataStream) {\r\n  let data = dataStream.sort((a, b) => a.id - b.id);\r\n  let id = 1;\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    if (data[i].id === id) {\r\n      id++;\r\n    }\r\n  }\r\n  return id;\r\n}\r\n\r\n//This function looks into the links cell to fund a suitable link, mail address or redirects to Axis homepage\r\nfunction findURL(dataStream, columnNumber) {\r\n  let information = '';\r\n  if (columnNumber === 2 && dataStream.TechLeadLink){\r\n    information = dataStream.TechLeadLink;\r\n  }\r\n  else if (columnNumber === 1 && dataStream.BusinessContactLink){\r\n    information = dataStream.BusinessContactLink;\r\n  }\r\n  else if(dataStream.WorkdayLink){\r\n    information = dataStream.WorkdayLink;\r\n  }\r\n  if (information) {\r\n  let data = information.split(\" \");\r\n  let url = \"\";\r\n  \r\n  for (let i = 0; i < data.length; i++) {\r\n    if( data[i].startsWith(\"https://www.myworkday.com\")){\r\n      url = data[i];\r\n      return url;\r\n    }\r\n    else if (data[i].startsWith(\"mailto\")) {\r\n      url = data[i];\r\n    }\r\n  }\r\n  if (url === \"\") {\r\n    url = \"https://www.axiscapital.com/\";\r\n  }\r\n  return url;\r\n  }\r\n  else {\r\n    return \"https://www.axiscapital.com/\";\r\n  }\r\n}\r\n\r\nexport default DataTable;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/DataTable.jsx';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <div style={{width:'100%'}} >\r\n    <h1 style={{textAlign:'center', fontSize:'20px'}}>Axis Information Table </h1>\r\n    <App />\r\n    </div>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}